{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":12338476,"sourceType":"datasetVersion","datasetId":7778171,"isSourceIdPinned":false}],"dockerImageVersionId":31040,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-07-03T06:48:44.891165Z","iopub.execute_input":"2025-07-03T06:48:44.891519Z","iopub.status.idle":"2025-07-03T06:48:45.227025Z","shell.execute_reply.started":"2025-07-03T06:48:44.891493Z","shell.execute_reply":"2025-07-03T06:48:45.226087Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/remote-work-health-impact-survey-2025/post_pandemic_remote_work_health_impact_2025.csv\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"import kagglehub\n\n# Download latest version\npath = kagglehub.dataset_download(\"pratyushpuri/remote-work-health-impact-survey-2025\")\n\nprint(\"Path to dataset files:\", path)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-03T06:48:45.228755Z","iopub.execute_input":"2025-07-03T06:48:45.229158Z","iopub.status.idle":"2025-07-03T06:48:45.765654Z","shell.execute_reply.started":"2025-07-03T06:48:45.229135Z","shell.execute_reply":"2025-07-03T06:48:45.764710Z"}},"outputs":[{"name":"stdout","text":"Path to dataset files: /kaggle/input/remote-work-health-impact-survey-2025\n","output_type":"stream"}],"execution_count":3},{"cell_type":"code","source":"from pyspark.sql import SparkSession","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-03T06:48:45.766486Z","iopub.execute_input":"2025-07-03T06:48:45.766747Z","iopub.status.idle":"2025-07-03T06:48:46.144124Z","shell.execute_reply.started":"2025-07-03T06:48:45.766727Z","shell.execute_reply":"2025-07-03T06:48:46.143269Z"}},"outputs":[],"execution_count":4},{"cell_type":"code","source":"spark = SparkSession.builder.appName(\"SparkRandom\").getOrCreate()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-03T06:48:46.145037Z","iopub.execute_input":"2025-07-03T06:48:46.145519Z","iopub.status.idle":"2025-07-03T06:48:53.906418Z","shell.execute_reply.started":"2025-07-03T06:48:46.145492Z","shell.execute_reply":"2025-07-03T06:48:53.905504Z"}},"outputs":[{"name":"stderr","text":"Setting default log level to \"WARN\".\nTo adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).\n25/07/03 06:48:51 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"df = spark.read.option(\"header\", True).csv(\"/kaggle/input/remote-work-health-impact-survey-2025\")\ndf.show(10)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-03T06:48:53.909173Z","iopub.execute_input":"2025-07-03T06:48:53.909812Z","iopub.status.idle":"2025-07-03T06:49:01.588950Z","shell.execute_reply.started":"2025-07-03T06:48:53.909783Z","shell.execute_reply":"2025-07-03T06:49:01.587702Z"}},"outputs":[{"name":"stdout","text":"+-----------+---+----------+-------------+--------------------+-----------------+----------------+--------------+--------------------+-------------+-----------------------+----------------------+----------------------+------------+\n|Survey_Date|Age|    Gender|       Region|            Industry|         Job_Role|Work_Arrangement|Hours_Per_Week|Mental_Health_Status|Burnout_Level|Work_Life_Balance_Score|Physical_Health_Issues|Social_Isolation_Score|Salary_Range|\n+-----------+---+----------+-------------+--------------------+-----------------+----------------+--------------+--------------------+-------------+-----------------------+----------------------+----------------------+------------+\n| 2025-06-01| 27|    Female|         Asia|Professional Serv...|     Data Analyst|          Onsite|            64|     Stress Disorder|         High|                      3|  Shoulder Pain; Ne...|                     2|    $40K-60K|\n| 2025-06-01| 37|    Female|         Asia|Professional Serv...|     Data Analyst|          Onsite|            37|     Stress Disorder|         High|                      4|             Back Pain|                     2|   $80K-100K|\n| 2025-06-01| 32|    Female|       Africa|           Education| Business Analyst|          Onsite|            36|                ADHD|         High|                      3|  Shoulder Pain; Ey...|                     2|   $80K-100K|\n| 2025-06-01| 40|    Female|       Europe|           Education|     Data Analyst|          Onsite|            63|                ADHD|       Medium|                      1|  Shoulder Pain; Ey...|                     2|    $60K-80K|\n| 2025-06-01| 30|      Male|South America|       Manufacturing|  DevOps Engineer|          Hybrid|            65|                None|       Medium|                      5|                  None|                     4|    $60K-80K|\n| 2025-06-01| 52|      Male|      Oceania|    Customer Service| Business Analyst|          Onsite|            61|             Burnout|       Medium|                      4|  Back Pain; Should...|                     3|    $60K-80K|\n| 2025-06-01| 50|    Female|         Asia|       Manufacturing|       IT Support|          Onsite|            62|                None|       Medium|                      4|  Back Pain; Should...|                     2|   $80K-100K|\n| 2025-06-01| 63|Non-binary|       Europe|Professional Serv...| Technical Writer|          Onsite|            55|             Anxiety|         High|                      3|                  None|                     2|  $100K-120K|\n| 2025-06-01| 30|    Female|South America|          Technology|Software Engineer|          Remote|            47|             Anxiety|       Medium|                      2|             Neck Pain|                     4|    $60K-80K|\n| 2025-06-01| 37|    Female|         Asia|             Finance|       HR Manager|          Onsite|            55|             Burnout|       Medium|                      5|             Back Pain|                     1|    $60K-80K|\n+-----------+---+----------+-------------+--------------------+-----------------+----------------+--------------+--------------------+-------------+-----------------------+----------------------+----------------------+------------+\nonly showing top 10 rows\n\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"# What is the average Burnout_Level for each Industry?\n\navgDf = df.select([\"Industry\", \"Burnout_Level\"])\navgDf = avgDf.groupBy([\"Industry\", \"Burnout_Level\"]).count().orderBy([\"Industry\", \"Burnout_Level\"])\navgDf.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-03T06:49:01.590873Z","iopub.execute_input":"2025-07-03T06:49:01.591466Z","iopub.status.idle":"2025-07-03T06:49:03.334563Z","shell.execute_reply.started":"2025-07-03T06:49:01.591434Z","shell.execute_reply":"2025-07-03T06:49:03.333670Z"}},"outputs":[{"name":"stdout","text":"+--------------------+-------------+-----+\n|            Industry|Burnout_Level|count|\n+--------------------+-------------+-----+\n|    Customer Service|         High|   55|\n|    Customer Service|          Low|   36|\n|    Customer Service|       Medium|   82|\n|           Education|         High|   77|\n|           Education|          Low|   83|\n|           Education|       Medium|  127|\n|             Finance|         High|  123|\n|             Finance|          Low|   74|\n|             Finance|       Medium|  170|\n|          Healthcare|         High|   85|\n|          Healthcare|          Low|   61|\n|          Healthcare|       Medium|  101|\n|       Manufacturing|         High|  118|\n|       Manufacturing|          Low|   80|\n|       Manufacturing|       Medium|  172|\n|           Marketing|         High|   72|\n|           Marketing|          Low|   46|\n|           Marketing|       Medium|   84|\n|Professional Serv...|         High|  228|\n|Professional Serv...|          Low|  191|\n+--------------------+-------------+-----+\nonly showing top 20 rows\n\n","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"# Which Region reports the highest average Work_Life_Balance_Score?\nfrom pyspark.sql.types import IntegerType\n\nregionWLBDf = df.select([\"Region\", \"Work_Life_Balance_Score\"])\nregionWLBDf = regionWLBDf.withColumn(\"Work_Life_Balance_Score\", regionWLBDf[\"Work_Life_Balance_Score\"].cast(IntegerType()))\nregionWLBDf = regionWLBDf.groupBy(\"Region\").avg(\"Work_Life_Balance_Score\").withColumnRenamed(\"avg(Work_Life_Balance_Score)\", \"Avg_WLB_Score\")\nregionWLBDf = regionWLBDf.orderBy(\"Avg_WLB_Score\", ascending = False).first()\nprint(regionWLBDf)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-03T06:49:03.336157Z","iopub.execute_input":"2025-07-03T06:49:03.337049Z","iopub.status.idle":"2025-07-03T06:49:04.048724Z","shell.execute_reply.started":"2025-07-03T06:49:03.337020Z","shell.execute_reply":"2025-07-03T06:49:04.047738Z"}},"outputs":[{"name":"stdout","text":"Row(Region='Asia', Avg_WLB_Score=3.228239845261122)\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"# Which Job_Role has the highest average Hours_Per_Week?\n\nhighHoursDf = df.withColumn(\"Hours_Per_Week\", df[\"Hours_Per_Week\"].cast(IntegerType()))\nhighHoursDf = highHoursDf.groupBy(\"Job_Role\").avg(\"Hours_Per_Week\").withColumnRenamed(\"avg(Hours_Per_Week)\", \"Avg_Hours\")\nhighHoursDf = highHoursDf.orderBy(\"Avg_Hours\", ascending = False).first()\nprint(highHoursDf)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-03T06:50:35.218519Z","iopub.execute_input":"2025-07-03T06:50:35.218818Z","iopub.status.idle":"2025-07-03T06:50:35.615562Z","shell.execute_reply.started":"2025-07-03T06:50:35.218797Z","shell.execute_reply":"2025-07-03T06:50:35.614511Z"}},"outputs":[{"name":"stdout","text":"Row(Job_Role='Digital Marketing Specialist', Avg_Hours=51.84873949579832)\n","output_type":"stream"}],"execution_count":14},{"cell_type":"code","source":"# Do employees with higher Salary_Range report lower Social_Isolation_Score?\n\nsocialIsolationScoreDf = df.select([\"Salary_Range\", \"Social_Isolation_Score\"])\nsocialIsolationScoreDf = socialIsolationScoreDf.withColumn(\"Social_Isolation_Score\", socialIsolationScoreDf[\"Social_Isolation_Score\"].cast(IntegerType()))\nsocialIsolationScoreDf = socialIsolationScoreDf.groupBy(\"Salary_Range\").avg(\"Social_Isolation_Score\")\nsocialIsolationScoreDf.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-03T06:57:22.702424Z","iopub.execute_input":"2025-07-03T06:57:22.702723Z","iopub.status.idle":"2025-07-03T06:57:23.160455Z","shell.execute_reply.started":"2025-07-03T06:57:22.702702Z","shell.execute_reply":"2025-07-03T06:57:23.158781Z"}},"outputs":[{"name":"stdout","text":"+------------+---------------------------+\n|Salary_Range|avg(Social_Isolation_Score)|\n+------------+---------------------------+\n|    $40K-60K|          2.719607843137255|\n|    $60K-80K|          2.671597633136095|\n|  $100K-120K|         2.6862745098039214|\n|   $80K-100K|         2.7385892116182573|\n|      $120K+|         2.7142857142857144|\n+------------+---------------------------+\n\n","output_type":"stream"}],"execution_count":20},{"cell_type":"code","source":"# Random Testing Joins\n\nemp = [(1,\"Smith\",-1,\"2018\",\"10\",\"M\",3000), \\\n    (2,\"Rose\",1,\"2010\",\"20\",\"M\",4000), \\\n    (3,\"Williams\",1,\"2010\",\"10\",\"M\",1000), \\\n    (4,\"Jones\",2,\"2005\",\"10\",\"F\",2000), \\\n    (5,\"Brown\",2,\"2010\",\"40\",\"\",-1), \\\n      (6,\"Brown\",2,\"2010\",\"50\",\"\",-1) \\\n  ]\n\nempColumns = [\"emp_id\",\"name\",\"superior_emp_id\",\"year_joined\", \\\n       \"emp_dept_id\",\"gender\",\"salary\"]\n\nempDf = spark.createDataFrame(data = emp, schema = empColumns)\n\nempDf.show()\n\ndept = [(\"Finance\",10), \\\n    (\"Marketing\",20), \\\n    (\"Sales\",30), \\\n    (\"IT\",40) \\\n  ]\n\ndeptColumns = [\"dept_name\",\"dept_id\"]\n\ndeptDf = spark.createDataFrame(data = dept, schema = deptColumns)\n\ndeptDf.show()\n\njoinedDf = empDf.join(deptDf, empDf.emp_dept_id == deptDf.dept_id, \"inner\")\n\njoinedDf.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-03T07:06:03.720436Z","iopub.execute_input":"2025-07-03T07:06:03.720744Z","iopub.status.idle":"2025-07-03T07:06:05.888690Z","shell.execute_reply.started":"2025-07-03T07:06:03.720722Z","shell.execute_reply":"2025-07-03T07:06:05.887491Z"}},"outputs":[{"name":"stdout","text":"+------+--------+---------------+-----------+-----------+------+------+\n|emp_id|    name|superior_emp_id|year_joined|emp_dept_id|gender|salary|\n+------+--------+---------------+-----------+-----------+------+------+\n|     1|   Smith|             -1|       2018|         10|     M|  3000|\n|     2|    Rose|              1|       2010|         20|     M|  4000|\n|     3|Williams|              1|       2010|         10|     M|  1000|\n|     4|   Jones|              2|       2005|         10|     F|  2000|\n|     5|   Brown|              2|       2010|         40|      |    -1|\n|     6|   Brown|              2|       2010|         50|      |    -1|\n+------+--------+---------------+-----------+-----------+------+------+\n\n+---------+-------+\n|dept_name|dept_id|\n+---------+-------+\n|  Finance|     10|\n|Marketing|     20|\n|    Sales|     30|\n|       IT|     40|\n+---------+-------+\n\n","output_type":"stream"},{"name":"stderr","text":"[Stage 37:==========================================================>                   (3 + 1) / 4]\r","output_type":"stream"},{"name":"stdout","text":"+------+--------+---------------+-----------+-----------+------+------+---------+-------+\n|emp_id|    name|superior_emp_id|year_joined|emp_dept_id|gender|salary|dept_name|dept_id|\n+------+--------+---------------+-----------+-----------+------+------+---------+-------+\n|     1|   Smith|             -1|       2018|         10|     M|  3000|  Finance|     10|\n|     3|Williams|              1|       2010|         10|     M|  1000|  Finance|     10|\n|     4|   Jones|              2|       2005|         10|     F|  2000|  Finance|     10|\n|     2|    Rose|              1|       2010|         20|     M|  4000|Marketing|     20|\n|     5|   Brown|              2|       2010|         40|      |    -1|       IT|     40|\n+------+--------+---------------+-----------+-----------+------+------+---------+-------+\n\n","output_type":"stream"},{"name":"stderr","text":"                                                                                                    \r","output_type":"stream"}],"execution_count":23}]}